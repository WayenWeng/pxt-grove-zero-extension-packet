{
  "display": "Functions to operate G2 module.\n\r\nFunctions to operate Grove Zero module.",
  "display.animationPicker": "An animation that can be shown on a light strip",
  "display.animationPicker|param|animation": "The animation type",
  "display.cleanDigitDisplay": "Clean digit display.",
  "display.cleanRGBDisplay": "Clean display on the rgb LED Matrix.",
  "display.colorIndexPicker": "Get the color index picker field editor",
  "display.colorIndexPicker|param|color": "color, eg: 0xFF0000",
  "display.colorNumberPicker": "Get the color picker field editor",
  "display.colorNumberPicker|param|color": "color, eg: 0xFF0000",
  "display.colorWheelPicker": "Get the color wheel field editor",
  "display.displayAlway": "Display always mode on RGB LED.",
  "display.displayAlway|param|color": "the color of display.",
  "display.displayAlway|param|duration": "display time duration(ms). Set it to 0 to display forever. eg: 0",
  "display.displayBlink": "Display blink mode on RGB LED.",
  "display.displayBlink|param|color": "the color of display.",
  "display.displayBlink|param|duration": "display time duration(ms). Set it to 0 to display forever. eg: 0",
  "display.displayBlink|param|interval": "display blink interval time(ms), this parameter determines the rate of blink, default 250ms. eg: 250",
  "display.displayBreathe": "Display breathe mode on RGB LED.",
  "display.displayBreathe|param|color": "the color of display.",
  "display.displayBreathe|param|duration": "display time duration(ms). Set it to 0 to display forever. eg: 0",
  "display.displayBreathe|param|interval": "display breathe interval time(ms), this parameter determines the rate of color change, default 20ms. eg: 20",
  "display.displayFade": "Display fade mode on RGB LED. The RGB LED will change from color1 to color2.",
  "display.displayFade|param|color1": "the color of display at first.",
  "display.displayFade|param|color2": "the color of display at finally.",
  "display.displayFade|param|duration": "display time duration(ms) after the color change finish, set it to 0 to display forever. eg: 0",
  "display.displayFade|param|interval": "display breathe interval time(ms), this parameter determines the rate of color change, default 20ms. eg: 20",
  "display.displayRainbow": "Display rainbow mode on RGB LED.",
  "display.displayRainbow|param|duration": "display time duration(ms). Set it to 0 to display forever. eg: 0",
  "display.displayRainbow|param|interval": "display rainbow interval time(ms), this parameter determines the rate of color change, default 20ms. eg: 20",
  "display.displayRandomColor": "Display a random color on RGB LED.",
  "display.displayRandomColor|param|duration": "display time duration(ms). Set it to 0 to display forever. eg: 500",
  "display.iconPicker": "An icon that can be shown on a rgb led matrix",
  "display.iconPicker|param|icon": "The icon type",
  "display.onTimerOut": "Do something when the digit display timer out.",
  "display.onTimerOut|param|handler": "code to run",
  "display.pauseStopwatch": "Pause the Stopwatch.",
  "display.resetStopwatch": "Reset the Stopwatch.",
  "display.resumeStopwatch": "Resume the Stopwatch.",
  "display.rgbLedColor": "Converts red, green, blue channels into a RGB color",
  "display.rgbLedColor|param|blue": "value of the blue channel between 0 and 255. eg: 255",
  "display.rgbLedColor|param|green": "value of the green channel between 0 and 255. eg: 255",
  "display.rgbLedColor|param|red": "value of the red channel between 0 and 255. eg: 255",
  "display.setBrightness": "Set the brightness of RGB LED.",
  "display.setBrightness|param|brightness": "display brightness, from 0 - 255, default 100. ",
  "display.showDigitDisplay": "Display the number.",
  "display.showDigitDisplay|param|num": "value want to display, from 0 to 9999.",
  "display.showRGBAnimation": "Show a single animation frame on the rgb LED Matrix.",
  "display.showRGBAnimation|param|animation": "the animation want to show",
  "display.showRGBBars": "Display a graph for a positive value on the rgb LED Matrix.",
  "display.showRGBBars|param|max": "the maximum value of the graph, eg: 1023",
  "display.showRGBBars|param|value": "the value to be graphed, eg: 0",
  "display.showRGBIcon": "Show a single icon frame on the rgb LED Matrix.",
  "display.showRGBIcon|param|icon": "the icon want to show",
  "display.showRGBLeds": "Draw a pixel image on rgb LED Matrix.",
  "display.showRGBLeds|param|color": "the color of display.",
  "display.showRGBLeds|param|image": "a string describing the leds, eg: \"\"",
  "display.showRGBNumber": "Display a number on the rgb LED Matrix. A number with more than 1 digit will scroll on the screen.",
  "display.showRGBNumber|param|color": "the color of display.",
  "display.showRGBNumber|param|num": "set the number you want to display on LED matrix. Long numbers will roll on it, the shorter you set the time duration, the faster it rolls, eg: 0",
  "display.showRGBString": "Display text on the rgb LED Matrix. Any text with more than 1 character will scroll on the screen.",
  "display.showRGBString|param|color": "the color of display.",
  "display.showRGBString|param|str": "the string pointer, the maximum number is 28 bytes, eg: hello",
  "display.startStopwatch": "Start the Stopwatch.",
  "display.startTimer": "Start digit display timer.",
  "display.startTimer|param|time": "value of timer timeout.",
  "display.stopDisplay": "Display nothing on RGB LED.",
  "display.stopwatch": "Read the stopwatch value in millisecond.",
  "input": "Respond to and read data from buttons and sensors.\n\nEvents and data from sensors.\n\nFunctions to operate G2 module.\n\r\nFunctions to operate Grove Zero module.",
  "input.onMesh": "Do something when a mesh key ...",
  "input.onMesh|param|event": "the kind of mesh key gesture that needs to be detected",
  "input.onMesh|param|handler": "code to run when the event is raised",
  "input.slideDimmer": "Get the value from the slide dimmer sensor.",
  "input.wasMeshKeyTriggered": "Run code for a mesh key event and see if ...",
  "input.wasMeshKeyTriggered|param|event": "the kind of button gesture that needs to be detected",
  "motor": "Functions to operate Grove Zero module.",
  "motor.moveServo": "Move the servo by a degree.",
  "motor.moveServo|param|degree": "set the degree you want to move.",
  "motor.runWheel": "Run wheel by speed and direction.",
  "motor.runWheelWithDuty": "Run wheel by duty.",
  "motor.runWheelWithDuty|param|left": "the left speed you want to run.",
  "motor.runWheelWithDuty|param|right": "the right speed you want to run.",
  "motor.runWheel|param|direction": "the direction that want to set.",
  "motor.runWheel|param|speed": "the speed that want to run.",
  "motor.setMiniFan": "Set the mini fan by a speed.",
  "motor.setMiniFan|param|speed": "the speed you want to set.",
  "motor.stopWheel": "Stop wheel run.",
  "sensor": "Functions to operate G2 module.\n\nFunctions to operate Grove Zero module.",
  "sensor.color": "Get the color value from the color sensor in R:G:B.",
  "sensor.distance": "Get the distance value from the ultrasonic sensor in centimeter.",
  "sensor.onColor": "Do something when the color sensor detects a color event (red, blue etc...)",
  "sensor.onColor|param|event": "type of color to detect",
  "sensor.onColor|param|handler": "code to run",
  "sensor.onEncoder": "Do something when the encoder sensor detects a motion event (increase, decrease etc...)",
  "sensor.onEncoder|param|event": "type of encoder to detect",
  "sensor.onEncoder|param|handler": "code to run",
  "sensor.onGesture": "Do something when the gesture sensor detects a motion event (move left, up etc...)",
  "sensor.onGesture|param|event": "type of gesture to detect",
  "sensor.onGesture|param|handler": "code to run",
  "sensor.onLiner": "Do something when the liner sensor detects a motion event (left, right etc...)",
  "sensor.onLiner|param|event": "type of liner to detect",
  "sensor.onLiner|param|handler": "code to run",
  "sensor.onPIR": "Do something when the pir sensor detects ...",
  "sensor.onPIR|param|event": "type of pir to detect",
  "sensor.onPIR|param|handler": "code to run",
  "sensor.onUltrasonic": "Do something when the ultrasonic sensor detects ...",
  "sensor.onUltrasonic|param|event": "type of ultrasonic to detect",
  "sensor.onUltrasonic|param|handler": "code to run",
  "sensor.wasColorTriggered": "Get the color sensor event, see if it detected a motion (red, blue etc...)",
  "sensor.wasColorTriggered|param|event": "of color device",
  "sensor.wasEncoderTriggered": "Get the encoder sensor event, see if it detected a motion (increase, decrease etc...)",
  "sensor.wasEncoderTriggered|param|event": "of encoder device",
  "sensor.wasGestureTriggered": "Get the gesture sensor event, see if it detected a motion (move left etc...)",
  "sensor.wasGestureTriggered|param|event": "of gesture device",
  "sensor.wasLinerTriggered": "Get the liner sensor event, see if it detected a motion (left, right etc...)",
  "sensor.wasLinerTriggered|param|event": "of liner device",
  "sensor.wasLinerTypeTriggered": "Get the liner sensor value, see if it detected a motion (A, B etc...)",
  "sensor.wasLinerTypeTriggered|param|type": "of liner device",
  "sensor.wasPIRTriggered": "Get the PIR event, see if it detected a move or stop motion.",
  "sensor.wasPIRTriggered|param|event": "of PIR sensor",
  "sensor.wasUltrasonicTriggered": "Get the ultrasonic event, see if it detected a close or far distance.",
  "sensor.wasUltrasonicTriggered|param|event": "of ultrasonic sensor"
}